[
  {
    "nomor": 1,
    "pertanyaan": "Apa yang dimaksud dengan perangkat lunak (software)?",
    "a": "Sekumpulan perangkat keras yang berfungsi menjalankan sistem",
    "b": "Sekumpulan instruksi, struktur data, dan dokumentasi untuk menjalankan fungsi tertentu",
    "c": "Sekumpulan prosedur manual dalam sistem komputer",
    "d": "Sekumpulan algoritma untuk pengolahan data tanpa dokumentasi",
    "kunci": "b",
    "penjelasan": "Software terdiri dari instruksi, struktur data, dan dokumentasi yang digunakan untuk menjalankan fungsi tertentu.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 2,
    "pertanyaan": "Menurut Pressman, software terdiri dari tiga komponen utama, yaitu:",
    "a": "Algoritma, kode, dan perangkat keras",
    "b": "Instruksi, struktur data, dan dokumentasi",
    "c": "Model, diagram, dan dokumen kebutuhan",
    "d": "Komponen, database, dan jaringan",
    "kunci": "b",
    "penjelasan": "Menurut Pressman, software mencakup instruksi, struktur data, dan dokumentasi sebagai komponennya.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 3,
    "pertanyaan": "Salah satu karakteristik perangkat lunak adalah:",
    "a": "Dapat aus seperti perangkat keras",
    "b": "Mengalami kerusakan fisik setelah lama digunakan",
    "c": "Tidak mengalami keausan tetapi dapat mengalami deteriorasi",
    "d": "Tidak membutuhkan perawatan setelah dibuat",
    "kunci": "c",
    "penjelasan": "Software tidak aus secara fisik tetapi bisa menurun kualitasnya karena perubahan atau bug.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 4,
    "pertanyaan": "Istilah 'bathtub curve' digunakan untuk menggambarkan:",
    "a": "Pola kegagalan software",
    "b": "Pola kegagalan hardware",
    "c": "Pola pengembangan software",
    "d": "Pola perawatan sistem",
    "kunci": "b",
    "penjelasan": "Bathtub curve menunjukkan pola tingkat kegagalan perangkat keras dari awal hingga akhir masa pakainya.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 5,
    "pertanyaan": "'Software doesnâ€™t wear out' berarti:",
    "a": "Software tidak dapat digunakan lebih dari satu kali",
    "b": "Software tidak mengalami penurunan fungsi karena usia, tetapi karena perubahan atau bug",
    "c": "Software hanya rusak karena komponen fisik",
    "d": "Software memiliki umur terbatas seperti hardware",
    "kunci": "b",
    "penjelasan": "Software tidak rusak karena usia, tetapi karena modifikasi, konfigurasi, atau kesalahan manusia.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 6,
    "pertanyaan": "Yang termasuk jenis software adalah berikut, kecuali:",
    "a": "System software",
    "b": "Application software",
    "c": "Embedded software",
    "d": "Peripheral software",
    "kunci": "d",
    "penjelasan": "Peripheral bukan bagian dari jenis software melainkan perangkat keras tambahan.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 7,
    "pertanyaan": "Contoh software yang bukan Information System adalah:",
    "a": "Medical Record System",
    "b": "BIOS",
    "c": "Tax Filing System",
    "d": "Academic Information System",
    "kunci": "b",
    "penjelasan": "BIOS bukan sistem informasi karena tidak memproses data untuk pengguna.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 8,
    "pertanyaan": "Hubungan antara Software Engineering dan Computer Science adalah:",
    "a": "Software Engineering tidak terkait dengan Computer Science",
    "b": "Computer Science menyediakan teori dan prinsip dasar yang digunakan Software Engineering",
    "c": "Software Engineering adalah cabang hardware dari Computer Science",
    "d": "Computer Science berfokus pada implementasi kode tanpa teori",
    "kunci": "b",
    "penjelasan": "Software Engineering menggunakan teori dan prinsip yang dikembangkan oleh Computer Science.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 9,
    "pertanyaan": "Definisi klasik Software Engineering menurut Pressman adalah:",
    "a": "Penggunaan teknologi untuk meningkatkan performa komputer",
    "b": "Penerapan prinsip-prinsip rekayasa untuk menghasilkan software yang efisien dan ekonomis",
    "c": "Proses pemrograman dengan bahasa tingkat tinggi",
    "d": "Pembuatan software tanpa memperhatikan efisiensi",
    "kunci": "b",
    "penjelasan": "Pressman menekankan penerapan prinsip rekayasa agar software efisien dan ekonomis.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 10,
    "pertanyaan": "Menurut IEEE, Software Engineering mencakup:",
    "a": "Pengembangan software secara acak dan kreatif",
    "b": "Penerapan pendekatan sistematis, disiplin, dan terukur terhadap pengembangan software",
    "c": "Penulisan kode dengan prinsip matematika",
    "d": "Penggunaan alat otomatis untuk menggantikan manusia",
    "kunci": "b",
    "penjelasan": "IEEE menekankan bahwa Software Engineering harus dilakukan secara sistematis, disiplin, dan terukur.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 11,
    "pertanyaan": "Dalam pendekatan Software Engineering, tahap pertama dalam pemecahan masalah adalah:",
    "a": "Implementasi",
    "b": "Analisis masalah",
    "c": "Pengujian",
    "d": "Dokumentasi",
    "kunci": "b",
    "penjelasan": "Tahap awal adalah menganalisis masalah untuk memahami akar permasalahan sebelum membuat solusi.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 12,
    "pertanyaan": "Polya menyarankan empat langkah dalam penyelesaian masalah. Langkah terakhir adalah:",
    "a": "Memahami masalah",
    "b": "Membuat rencana",
    "c": "Melaksanakan rencana",
    "d": "Memeriksa hasil",
    "kunci": "d",
    "penjelasan": "Langkah keempat Polya adalah memeriksa hasil agar solusi sesuai dengan masalah awal.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 13,
    "pertanyaan": "Dalam pendekatan Polya, 'Plan the solution' berarti:",
    "a": "Menulis kode tanpa desain",
    "b": "Membuat model atau desain dari solusi",
    "c": "Menguji program",
    "d": "Menentukan data input",
    "kunci": "b",
    "penjelasan": "Langkah perencanaan solusi mencakup pembuatan model atau desain yang dapat diimplementasikan.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 14,
    "pertanyaan": "Lapisan dasar dalam rekayasa perangkat lunak (layered technology) adalah:",
    "a": "Tools layer",
    "b": "Process layer",
    "c": "Method layer",
    "d": "Design layer",
    "kunci": "b",
    "penjelasan": "Lapisan paling dasar adalah process layer yang menjadi fondasi pengembangan software.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 15,
    "pertanyaan": "Lapisan 'method' dalam software engineering mencakup:",
    "a": "Manajemen proyek",
    "b": "Penulisan dokumentasi",
    "c": "Teknik teknis untuk membangun software seperti analisis dan desain",
    "d": "Pemeliharaan perangkat keras",
    "kunci": "c",
    "penjelasan": "Method layer berisi teknik-teknik teknis untuk membangun software, termasuk analisis dan desain.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 16,
    "pertanyaan": "Lapisan 'tools' dalam Software Engineering berfungsi untuk:",
    "a": "Mengotomatisasi atau membantu proses dan metode dalam pengembangan software",
    "b": "Membuat algoritma manual",
    "c": "Mengelola database",
    "d": "Menghapus bug tanpa campur tangan manusia",
    "kunci": "a",
    "penjelasan": "Tools layer membantu otomatisasi dan efisiensi proses maupun metode dalam SE.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 17,
    "pertanyaan": "Mengapa kita tidak bisa langsung menulis kode tanpa tahapan SE?",
    "a": "Karena coding cepat tetapi tidak efisien",
    "b": "Karena hasil yang didapat sering tidak dapat direplikasi dan sulit dipelihara",
    "c": "Karena coding tidak membutuhkan analisis",
    "d": "Karena semua software harus diuji sebelum ditulis",
    "kunci": "b",
    "penjelasan": "Tanpa tahapan SE, hasilnya tidak dapat direplikasi dan sulit dipelihara secara sistematis.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 18,
    "pertanyaan": "Tujuan utama Software Engineering adalah:",
    "a": "Menghasilkan software yang mahal",
    "b": "Menghasilkan software yang ekonomis, handal, dan efisien",
    "c": "Menghasilkan software sebanyak mungkin",
    "d": "Menghapus kebutuhan akan dokumentasi",
    "kunci": "b",
    "penjelasan": "Tujuan SE adalah menciptakan software berkualitas tinggi dengan biaya dan waktu yang efisien.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 19,
    "pertanyaan": "Dalam konteks 'solving problem with SE', hal pertama yang harus dilakukan adalah:",
    "a": "Langsung menggunakan teknologi terbaru",
    "b": "Memahami akar masalah terlebih dahulu",
    "c": "Mengganti seluruh sistem lama",
    "d": "Menentukan bahasa pemrograman",
    "kunci": "b",
    "penjelasan": "Langkah awal SE adalah memahami inti permasalahan sebelum menentukan solusi teknis.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 20,
    "pertanyaan": "Proses sintesis dalam Software Engineering berarti:",
    "a": "Memecah masalah menjadi bagian kecil",
    "b": "Menggabungkan bagian solusi menjadi struktur besar",
    "c": "Menghapus modul yang tidak digunakan",
    "d": "Melakukan analisis kebutuhan",
    "kunci": "b",
    "penjelasan": "Sintesis adalah proses membangun solusi besar dari komponen kecil hasil analisis.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 21,
    "pertanyaan": "Prinsip dasar yang ditekankan Sommerville tentang Software Engineering adalah:",
    "a": "Pembuatan software dengan biaya setinggi mungkin",
    "b": "Pengembangan software yang efektif biaya dan berkualitas tinggi",
    "c": "Pemrograman berbasis hardware",
    "d": "Penulisan kode tanpa dokumentasi",
    "kunci": "b",
    "penjelasan": "Sommerville menekankan pentingnya efisiensi biaya dan kualitas tinggi dalam pengembangan software.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 22,
    "pertanyaan": "Dalam 'Understand the problem', yang tidak termasuk pertanyaan penting adalah:",
    "a": "Siapa stakeholder yang terlibat?",
    "b": "Apakah sistem sudah diuji?",
    "c": "Apa data dan fitur yang dibutuhkan?",
    "d": "Apakah masalah bisa dipecah menjadi bagian lebih kecil?",
    "kunci": "b",
    "penjelasan": "Pertanyaan tentang pengujian belum relevan pada tahap memahami masalah.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 23,
    "pertanyaan": "Pada tahap 'Carry out the plan', hal yang penting dilakukan adalah:",
    "a": "Membandingkan kode dengan desain",
    "b": "Menghapus modul tidak penting",
    "c": "Menulis ulang semua dokumentasi",
    "d": "Mengganti algoritma tanpa verifikasi",
    "kunci": "a",
    "penjelasan": "Implementasi harus sesuai dengan desain untuk menjaga konsistensi sistem.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 24,
    "pertanyaan": "Dalam tahap 'Examine the result', kegiatan utama adalah:",
    "a": "Validasi terhadap kebutuhan stakeholder",
    "b": "Implementasi kode",
    "c": "Pengujian acak tanpa dokumentasi",
    "d": "Desain ulang sistem",
    "kunci": "a",
    "penjelasan": "Tahap akhir adalah memastikan hasil sesuai kebutuhan dan harapan stakeholder.",
    "gambar": "",
    "ada_gambar": false
  },
  {
    "nomor": 25,
    "pertanyaan": "Kesimpulan utama bab ini adalah bahwa Software Engineering bertujuan untuk:",
    "a": "Menghasilkan perangkat keras lebih baik",
    "b": "Mengembangkan software berkualitas dengan biaya efisien",
    "c": "Mengurangi kebutuhan programmer",
    "d": "Menghapus semua proses manual",
    "kunci": "b",
    "penjelasan": "Tujuan utama SE adalah menghasilkan software berkualitas tinggi secara efisien.",
    "gambar": "",
    "ada_gambar": false
  }
]
